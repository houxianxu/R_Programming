geom = "bar",
)
?bin
??bin
ggplot(msleep, aes(sleep_rem / sleep_total, awake)) +
geom_point() + geom_smooth()
ggplot(msleep, aes(sleep_rem / sleep_total, awake))
bestfit <- geom_smooth(method = "lm", se = F,
colour = alpha("steelblue", 0.5), size = 2)
bestfit <- geom_smooth(method = "lm", se = F, colour = alpha("steelblue", 0.5), size = 2)
qplot(sleep_rem, sleep_total, data = msleep) + bestfit
bestfit <- geom_smooth(method = "lm", se = F, color = alpha("steelblue", 0.5), size = 2)
??alpha
library(scales)
bestfit <- geom_smooth(method = "lm", se = F, color = alpha("steelblue", 0.5), size = 2)
qplot(sleep_rem, sleep_total, data = msleep) + bestfit
p <- qplot(displ, hwy, data = mpg2) +
geom_smooth(method = "lm", se = F)
library(ggplot2)
library(ggplot2)
p <- qplot(displ, hwy, data = mpg2) +
geom_smooth(method = "lm", se = F)
mpg2 <- subset(mpg, cyl != 5 & drv %in% c("4", "f"))b
mpg2 <- subset(mpg, cyl != 5 & drv %in% c("4", "f"))
p <- qplot(displ, hwy, data = mpg2) +
geom_smooth(method = "lm", se = F)
p <- qplot(displ, hwy, data = mpg2) +
geom_smooth(method = "lm", se = F)
p
p <- qplot(displ, hwy, data = mpg2) +
geom_smooth(method = "lm")
p <- qplot(displ, hwy, data = mpg2) +
geom_smooth(method = "lm")
p
p + facet_grid(cyl ~ drv)
qplot(color, data=diamonds, geom = "bar", fill = cut,
position="dodge")
qplot(color, data=diamonds, geom = "bar", fill = cut)
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) +
opts(axis.text.x = theme_text(angle = 90, hjust = 1, size = 8,
colour = "grey50"))
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color)
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + xlab = Null
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + xlab(NULL)
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + xlab(NULL) + ylab(NULL)
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + opts(axis.text.x = theme_text(angle = 90))
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + axis.lable.x(NULL)
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + axis.lable.x = NULL
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + axis.text.x = NULL
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + axis.text.x(NULL)
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + opts(axis.text.x = NULL)
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + opts(axis.text.x = theme_text(NULL))
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + axis.text.x = NULL
hgram <- qplot(rating, data = movies, binwidth = 1)
hgram
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + opts(axis.text.x = NULL)
hgramt <- hgram +
opts(title = "This is a histogram")
hgramt + opts(plot.title = theme_text(size = 20))
hgram + opts(panel.grid.major = theme_line(colour = "red"))
hgram + opts(panel.grid.major = theme_line(size = 2))
hgram + opts(panel.grid.major = theme_line(linetype = "dotted"))
hgram + opts(axis.line = theme_segment())
hgram + opts(axis.line = theme_segment(colour = "red"))
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + opts(axis.text.x())
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) + opts(axis.text.x())
hgram + opts(plot.background = theme_rect(fill = "grey80",
colour = NA))
hgram + opts(plot.background = theme_rect(size = 2))
hgram + opts(plot.background = theme_rect(size = 1))
hgram + opts(panel.background = theme_rect())
hgram + opts(panel.background = theme_rect(colour = NA))
hgram + opts(panel.background =
theme_rect(linetype = "dotted"))
pdf(file = "output.pdf", width = 6, height = 6)
# If inside a script, you will need to explicitly print() plots
qplot(mpg, wt, data = mtcars)
qplot(wt, mpg, data = mtcars)
dev.off()
?pnorm()
pnorm(-0.545, 0, 0.628)
load(url("http://bit.ly/dasi_nc"))
load(url("http://bit.ly/dasi_nc"))
lab_resources/nc.RData."))
lab_resources/nc.RData."))
load(url("http://d396qusza40orc.cloudfront.net/statistics/
lab_resources/nc.RData."))
load(url("http://d396qusza40orc.cloudfront.net/statistics/
lab_resources/nc.RData."))
load(url("http://d396qusza40orc.cloudfront.net/statistics/lab_resources/nc.RData."))
load(url("http://d396qusza40orc.cloudfront.net/statistics/lab_resources/nc.RData."))
load(url("http://www.openintro.org/stat/data/ames.RData"))
load(url("http://d396qusza40orc.cloudfront.net/statistics/lab_resources/nc.RData"))
?by
by(nc$mage, nc$mature, max)
by(nc$mage, nc$mature, min)
str(nc)
str(nc$premie)
inference(y = gss$wordsum, x = gss$class, est = "mean", type = "ht",
alternative = "greater", method = "theoretical")
source("http://d396qusza40orc.cloudfront.net/statistics/lab_resources/inference.R")
source("http://d396qusza40orc.cloudfront.net/statistics/lab_resources/inference.R")
str(nc$premie)
str(nc)
# First try is good, however, the Chinese character is a problem
majorElement <- read.table("majorElement.csv", header = TRUE, sep = ",")
getNum <- function(i) {
first3 <- (substr(as.character(i), 1, 3))
return(first3)
}
Drill <- getNum(majorElement$样)
majorElement$Drill <- factor(Drill)
str(majorElement)
library(ggplot2)
# SiO2 - boxplot
qplot(Drill, majorElement$SiO2, data = majorElement, geom = c("boxplot"),
fill = Drill,xlab = "钻孔号", ylab = expression(paste(SiO[2], "质量分数"))
)
#SiO2与Al2O3相关图
qplot(majorElement$SiO2, majorElement$Al2O3,
geom = c("point", "smooth"), method = "lm", formula = y ~ x,
xlab = expression(paste(SiO[2], "含量")),
ylab = expression(paste(Al[2],O[3], "含量"))
)
#Fe2O3与MgO关系图
qplot(majorElement$MgO, majorElement$Fe2O3,
geom = c("point", "smooth"), method = "lm", formula = y ~ x,
xlab = expression(paste(MgO, "含量")),
ylab = expression(paste(Fe[2],O[3], "含量"))
)
#Fe2O3与SiO2关系图
qplot(majorElement$SiO2, majorElement$Fe2O3,
geom = c("point", "smooth"), method = "lm", formula = y ~ x,
xlab = expression(paste(SiO[2], "含量")),
ylab = expression(paste(Fe[2],O[3], "含量"))
)
##---------------------------------------------------------------------
# trace element
traceElement <- read.csv("traceElement.csv")
trace202 <- traceElement[1:22, ]
trace302 <- traceElement[22:48, ]
head(traceElement)
str(traceElement)
# add Dirll number
Drill <- getNum(traceElement$样)
traceElement$Drill <- factor(Drill)
# Sc boxplot
qplot(Drill, Sc, data = traceElement, geom = c("boxplot"),
fill = Drill,xlab = "钻孔号", ylab = expression(paste(Sc, "质量分数"))
)
# V, Cr, Co, Ni
library(pastecs)
write.csv(stat.desc(trace202[VCrCoNi]), file = "outVCrCoNi202.csv")
graphV <- qplot(Drill, traceElement$V, data = traceElement, geom = c("boxplot"),
color=Drill)
graphCr <- qplot(Drill, traceElement$Cr, data = traceElement, geom = c("boxplot"),
color=Drill)
graphCo <- qplot(Drill, traceElement$Co, data = traceElement, geom = c("boxplot"),
color=Drill)
graphNi <- qplot(Drill, traceElement$Ni, data = traceElement, geom = c("boxplot"),
color=Drill)
# Ga
qplot(Drill, Ga, data = traceElement, geom = c("boxplot"),
fill = Drill,xlab = "钻孔号", ylab = expression(paste(Ga, " 质量分数"))
)
summary(trace202$Ga)
summary(trace302$Ga)
# Ga and Al
newGaAlFrame <- data.frame(Al = majorElement$Al2O3, Ga = traceElement$Ga, Drill = traceElement$Drill)
str(newGaAlFrame)
qplot(Al, Ga, data = newGaAlFrame,
geom = c("point", "smooth"), method = "lm", formula = y ~ x,
xlab = expression(paste(Al[2], O[3], "含量")),
ylab = expression(paste(Ga, "含量"))
)
summary(newGaAlFrame$Ga / newGaAlFrame$Al)
cor(newGaAlFrame$Al,newGaAlFrame$Ga)
# U and Th--------------
summary(trace302$U)
summary(trace202$U)
summary(trace302$Th)
summary(trace202$Th)
# boxplot
qplot(Drill, U, data = traceElement, geom = c("boxplot"),
fill = Drill,xlab = "钻孔号", ylab = expression(paste(U, "质量分数"))
)
qplot(Drill, Th, data = traceElement, geom = c("boxplot"),
fill = Drill,xlab = "钻孔号", ylab = expression(paste(Th, "质量分数"))
)
# Nb Ta Zr Hf
summary(trace202$Nb)
summary(trace302$Nb)
summary(traceElement$Nb / traceElement$Ta)
qplot(Drill, Nb, geom = c("boxplot"), data = traceElement,
color = Drill, fill = Drill)
qplot(Drill, Ta, geom = c("boxplot"), data = traceElement,
color = Drill, fill = Drill)
qplot(Drill, Zr, geom = c("boxplot"), data = traceElement,
color = Drill, fill = Drill)
qplot(Drill, Hf, geom = c("boxplot"), data = traceElement,
color = Drill, fill = Drill)
library(pastecs)
NbTaZrHf <-c("Nb", "Ta", "Zr", "Hf")
write.csv(stat.desc(trace202[NbTaZrHf]), file = "outNbTaZrHf202.csv")
write.csv(stat.desc(trace302[NbTaZrHf]), file = "outNbTaZrHf302.csv")
write.csv(stat.desc(trace202$Nb / trace202$Ta), file = "outNb_Ta202.csv")
write.csv(stat.desc(trace302$Nb / trace302$Ta), file = "outNb_Ta302.csv")
qplot(traceElement$Nb, traceElement$Ta)
qplot(Ta, Nb, data = traceElement,
geom = c("point", "smooth"), method = "lm", formula = y ~ x,
xlab = expression(paste(Ta, "含量")),
ylab = expression(paste(Nb, "含量"))
)
qplot(Hf, Zr, data = traceElement,
geom = c("point", "smooth"), method = "lm", formula = y ~ x,
xlab = expression(paste(Hf, "含量")),
ylab = expression(paste(Zr, "含量"))
)
qplot(traceElement$Drill, traceElement$Nb / traceElement$Ta, geom = c("boxplot"),
color = traceElement$Drill, fill = traceElement$Drill)
summary(traceElement$Zr / traceElement$Hf)
qplot(traceElement$Drill, traceElement$Zr / traceElement$Hf, geom = c("boxplot"),
color = traceElement$Drill, fill = traceElement$Drill)
# REE
REE <- read.csv("REE.csv")
REE202 <- REE[1:22, ]
REE302 <- REE[23:47, ]
REE$Drill <- factor(REE$Drill)
qplot(Drill, ΣREE, data = REE, geom = c("boxplot"), color = Drill, fill = Drill)
library(ggplot)
library(ggplot2)
# First try is good, however, the Chinese character is a problem
majorElement <- read.table("majorElement.csv", header = TRUE, sep = ",")
getNum <- function(i) {
first3 <- (substr(as.character(i), 1, 3))
return(first3)
}
Drill <- getNum(majorElement$样)
majorElement$Drill <- factor(Drill)
str(majorElement)
library(ggplot2)
# SiO2 - boxplot
qplot(Drill, majorElement$SiO2, data = majorElement, geom = c("boxplot"),
fill = Drill,xlab = "钻孔号", ylab = expression(paste(SiO[2], "质量分数"))
)
#SiO2与Al2O3相关图
qplot(majorElement$SiO2, majorElement$Al2O3,
geom = c("point", "smooth"), method = "lm", formula = y ~ x,
xlab = expression(paste(SiO[2], "含量")),
ylab = expression(paste(Al[2],O[3], "含量"))
)
#Fe2O3与MgO关系图
qplot(majorElement$MgO, majorElement$Fe2O3,
geom = c("point", "smooth"), method = "lm", formula = y ~ x,
xlab = expression(paste(MgO, "含量")),
ylab = expression(paste(Fe[2],O[3], "含量"))
)
#Fe2O3与SiO2关系图
qplot(majorElement$SiO2, majorElement$Fe2O3,
geom = c("point", "smooth"), method = "lm", formula = y ~ x,
xlab = expression(paste(SiO[2], "含量")),
ylab = expression(paste(Fe[2],O[3], "含量"))
)
##---------------------------------------------------------------------
# trace element
traceElement <- read.csv("traceElement.csv")
trace202 <- traceElement[1:22, ]
trace302 <- traceElement[22:48, ]
head(traceElement)
str(traceElement)
# add Dirll number
Drill <- getNum(traceElement$样)
traceElement$Drill <- factor(Drill)
# Sc boxplot
qplot(Drill, Sc, data = traceElement, geom = c("boxplot"),
fill = Drill,xlab = "钻孔号", ylab = expression(paste(Sc, "质量分数"))
)
# V, Cr, Co, Ni
library(pastecs)
write.csv(stat.desc(trace202[VCrCoNi]), file = "outVCrCoNi202.csv")
graphV <- qplot(Drill, traceElement$V, data = traceElement, geom = c("boxplot"),
color=Drill)
graphCr <- qplot(Drill, traceElement$Cr, data = traceElement, geom = c("boxplot"),
color=Drill)
graphCo <- qplot(Drill, traceElement$Co, data = traceElement, geom = c("boxplot"),
color=Drill)
graphNi <- qplot(Drill, traceElement$Ni, data = traceElement, geom = c("boxplot"),
color=Drill)
# Ga
qplot(Drill, Ga, data = traceElement, geom = c("boxplot"),
fill = Drill,xlab = "钻孔号", ylab = expression(paste(Ga, " 质量分数"))
)
summary(trace202$Ga)
summary(trace302$Ga)
# Ga and Al
newGaAlFrame <- data.frame(Al = majorElement$Al2O3, Ga = traceElement$Ga, Drill = traceElement$Drill)
str(newGaAlFrame)
qplot(Al, Ga, data = newGaAlFrame,
geom = c("point", "smooth"), method = "lm", formula = y ~ x,
xlab = expression(paste(Al[2], O[3], "含量")),
ylab = expression(paste(Ga, "含量"))
)
summary(newGaAlFrame$Ga / newGaAlFrame$Al)
cor(newGaAlFrame$Al,newGaAlFrame$Ga)
# U and Th--------------
summary(trace302$U)
summary(trace202$U)
summary(trace302$Th)
summary(trace202$Th)
# boxplot
qplot(Drill, U, data = traceElement, geom = c("boxplot"),
fill = Drill,xlab = "钻孔号", ylab = expression(paste(U, "质量分数"))
)
qplot(Drill, Th, data = traceElement, geom = c("boxplot"),
fill = Drill,xlab = "钻孔号", ylab = expression(paste(Th, "质量分数"))
)
# Nb Ta Zr Hf
summary(trace202$Nb)
summary(trace302$Nb)
summary(traceElement$Nb / traceElement$Ta)
qplot(Drill, Nb, geom = c("boxplot"), data = traceElement,
color = Drill, fill = Drill)
qplot(Drill, Ta, geom = c("boxplot"), data = traceElement,
color = Drill, fill = Drill)
qplot(Drill, Zr, geom = c("boxplot"), data = traceElement,
color = Drill, fill = Drill)
qplot(Drill, Hf, geom = c("boxplot"), data = traceElement,
color = Drill, fill = Drill)
library(pastecs)
NbTaZrHf <-c("Nb", "Ta", "Zr", "Hf")
write.csv(stat.desc(trace202[NbTaZrHf]), file = "outNbTaZrHf202.csv")
write.csv(stat.desc(trace302[NbTaZrHf]), file = "outNbTaZrHf302.csv")
write.csv(stat.desc(trace202$Nb / trace202$Ta), file = "outNb_Ta202.csv")
write.csv(stat.desc(trace302$Nb / trace302$Ta), file = "outNb_Ta302.csv")
qplot(traceElement$Nb, traceElement$Ta)
qplot(Ta, Nb, data = traceElement,
geom = c("point", "smooth"), method = "lm", formula = y ~ x,
xlab = expression(paste(Ta, "含量")),
ylab = expression(paste(Nb, "含量"))
)
qplot(Hf, Zr, data = traceElement,
geom = c("point", "smooth"), method = "lm", formula = y ~ x,
xlab = expression(paste(Hf, "含量")),
ylab = expression(paste(Zr, "含量"))
)
qplot(traceElement$Drill, traceElement$Nb / traceElement$Ta, geom = c("boxplot"),
color = traceElement$Drill, fill = traceElement$Drill)
summary(traceElement$Zr / traceElement$Hf)
qplot(traceElement$Drill, traceElement$Zr / traceElement$Hf, geom = c("boxplot"),
color = traceElement$Drill, fill = traceElement$Drill)
# REE
REE <- read.csv("REE.csv")
REE202 <- REE[1:22, ]
REE302 <- REE[23:47, ]
REE$Drill <- factor(REE$Drill)
qplot(Drill, ΣREE, data = REE, geom = c("boxplot"), color = Drill, fill = Drill)
qplot(majorElement$MgO, majorElement$Fe2O3,
geom = c("point", "smooth"), method = "lm", formula = y ~ x,
xlab = expression(paste(MgO, "含量")),
ylab = expression(paste(Fe[2],O[3], "含量"))
)
majorElement <- read.table("majorElement.csv", header = TRUE, sep = ",")
help.search("rnorm")
args("rnorm")
a <- available.packages()
head(a)
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
x <- 1
attributes(x)
class(x)
attributes
attributes(x)
attributes(vector)
attributes()
print (x)
msg <- "hello"
print(msg)
msg
class(msg)
type(msg)
msg[1]
msg[0]
msg[2]
x < 1:30
x <- 1:30
x
x <- c("a", "b")
x
x[1]
msg
type(x)
class(x)
x
x[1]
msg
x <- vector("numeric", length = 10)
x
y <- c(1.7, "A")
y
x <- 0:6
x
class(x)
x <- 3
x
class(x)
x <- 3l
x <- 3L
class(x)
as.numeric
m <- matrix(nrow = 2, ncol = 4)
m
dim(m)
attributes(m)
m <- matrix(1:6, nrow = 2, ncol = 3)
m
x <- 1:3
y <- 10:12
cbind(x, y)
x <- list(l, "a")
x <- list(1, "a")
x
list[1]
list[[1]]
x
x[[1]]
x
x[1]
x[[1]]
factor(1:3)
x <- factor(1:3)
class(x)
x <- c("Male", "Female")
x <- factor(x)
x
table(x)
class(x)
unclass(x)
x <- factor(c("yes", "yes", "no", "yes", "no"))
x
x <- factor(c("yes", "yes", "no", "yes", "no"), levels = c("yes", "no")
)
x
is.na(x)
is.nan(x)
x <- data.frame(foo = 1:3)
x
names(x)
names(x) <- "fd"
x
dimnames(m)
dimnames(x)
cnames
cname
cnames
names
x <- matrix(1:6, 2, 3)
x[1,2]
x
search()
setwd("E:/study/ComputerPrograms/courseCode/dataScienceCoursera/RProgramming/week2")
source("pollutantmean.R")
source("complete.R")
source("corr.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
loginPrompt()
submit()
loginPrompt()
submit()
CLASS <- c("rprog-003")
submit.url <- c("http://class.coursera.org/rprog-003/assignment/submit")
challenge.url <- c("http://class.coursera.org/rprog-003/assignment/challenge")
submit()
submit()
submit()
submit()
submit()
CLASS <- c("rprog-003")
submit.url <- c("http://class.coursera.org/rprog-003/assignment/submit")
challenge.url <- c("http://class.coursera.org/rprog-003/assignment/challenge")
submit()
submit()
submit()
submit()
submit()
submit()
